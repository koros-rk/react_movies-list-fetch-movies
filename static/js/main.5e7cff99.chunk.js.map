{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","concat","FindMovie","_ref$onMovieAd","onMovieAd","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","query","setQuery","_useState5","_useState6","error","setError","_useState7","_useState8","isLoading","setIsLoading","useEffect","fetchMovie","useCallback","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieFromServer","Title","Plot","Poster","imdbID","finally","reset","_Fragment","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","addMovie","some","item","prevState","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e7cff99.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\n// const API_URL = 'https://www.omdbapi.com/?apikey=your-key';\n\nconst apikey = '775ce644';\nconst API_URL = `https://www.omdbapi.com/?apikey=${apikey}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, {\n  FormEvent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\n// eslint-disable-next-line max-len\nconst DEFAULT_IMAGE = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ninterface Props {\n  onMovieAd: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAd = () => {} }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => setError(false), [query]);\n\n  const fetchMovie = useCallback((event: FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n    getMovie(query)\n      .then(movieFromServer => {\n        if ('Error' in movieFromServer) {\n          setError(true);\n        } else {\n          const {\n            Title: title,\n            Plot: description,\n            Poster: imgUrl,\n            imdbID: imdbId,\n          } = movieFromServer;\n\n          const image = imgUrl !== 'N/A'\n            ? imgUrl\n            : DEFAULT_IMAGE;\n\n          setMovie({\n            title,\n            description,\n            imgUrl: image,\n            imdbId,\n            imdbUrl: `https://www.imdb.com/title/${imdbId}`,\n          });\n        }\n      })\n      .finally(() => setIsLoading(false));\n  }, [query]);\n\n  const reset = useCallback(() => {\n    setQuery('');\n    setMovie(null);\n  }, []);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          if (query !== '') {\n            fetchMovie(event);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={event => setQuery(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    onMovieAd(movie);\n                    reset();\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { Movie } from './types/Movie';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    if (!movies.some(item => item.imdbId === movie.imdbId)) {\n      setMovies(prevState => [...prevState, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onMovieAd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}